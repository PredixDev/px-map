{"version":3,"sources":["px-map-behavior-marker.es6.js"],"names":["namespace","window","PxMapBehavior","MarkerImpl","properties","lat","type","Number","notify","observer","lng","name","String","canAddInst","createInst","options","L","marker","geometry","config","updateInst","lastOptions","nextOptions","elementInst","setLatLng","icon","setIcon","getInstOptions","getMarkerLatLng","title","getMarkerIcon","latLng","Error","Marker","Layer","ParentLayer","StaticMarkerImpl","reflectToAttribute","value","showBadge","Boolean","markerIcon","_getMarkerIconOptions","PxMap","StaticIcon","_updateMarkerIcon","shouldUpdateInst","badge","StaticMarker"],"mappings":"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","file":"px-map-behavior-marker.js","sourcesContent":["(function() {\n  'use strict';\n\n  /****************************************************************************\n   * BEHAVIORS\n   ****************************************************************************/\n\n  /* Ensures the behavior namespace is created */\n  const namespace = (window.PxMapBehavior = window.PxMapBehavior || {});\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.Marker\n   */\n  const MarkerImpl = {\n    properties: {\n      /**\n       * The latitude of the marker. Set a value to draw the marker at a coordinate\n       * when the map is loaded. Listen for updates to track the marker's location\n       * if the marker is draggable or created dynamically by the user.\n       *\n       * @type {Number}\n       */\n      lat: {\n        type: Number,\n        notify: true,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * The longitude of the marker. Set a value to draw the marker at a coordinate\n       * when the map is loaded. Listen for updates to track the marker's location\n       * if the marker is draggable or created dynamically by the user.\n       *\n       * @type {Number}\n       */\n      lng: {\n        type: Number,\n        notify: true,\n        observer: 'shouldUpdateInst'\n      },\n\n      /**\n       * A human-readable name for this layer group. If a tooltip is attached,\n       * this name will be shown on hover over the marker. If the map has a layer\n       * control panel, the user will click this name to show, hide, or\n       * manipulate this layer.\n       *\n       * @type {String}\n       */\n      name: {\n        type: String,\n        notify: true,\n        observer: 'shouldUpdateInst'\n      }\n    },\n\n    // DEFAULT METHODS FOR EVERY BASE ELEMENT...\n\n    canAddInst() {\n      return (typeof this.lat === 'number') && (typeof this.lng === 'number');\n    },\n\n    createInst(options) {\n      return L.marker(options.geometry, options.config);\n    },\n\n    updateInst(lastOptions, nextOptions) {\n      if (lastOptions.geometry !== nextOptions.geometry) {\n        this.elementInst.setLatLng(nextOptions.geometry);\n      }\n      if (lastOptions.config.icon !== nextOptions.config.icon) {\n        this.elementInst.setIcon(nextOptions.config.icon);\n      }\n    },\n\n    getInstOptions() {\n      const geometry = this.getMarkerLatLng();\n      const config = {};\n      config.title = (this.name || '');\n      config.icon = this.getMarkerIcon();\n\n      return { geometry, config };\n    },\n\n    // CUSTOM METHODS FOR MARKERS...\n\n    getMarkerLatLng() {\n      if (!this.lat || !this.lng) return [];\n      return L.latLng(this.lat, this.lng);\n    },\n\n    // SHOULD BE IMPLEMENTED WHEN EXTENDING...\n\n    getMarkerIcon() {\n      throw new Error('The `getMarkerIcon` method must be implemented.');\n    }\n  };\n  /* Bind Marker behavior */\n  namespace.Marker = [\n    namespace.Layer,\n    namespace.ParentLayer,\n    MarkerImpl\n  ];\n\n  /**\n   *\n   * @polymerBehavior PxMapBehavior.StaticMarker\n   */\n  const StaticMarkerImpl = {\n    properties: {\n      /**\n       * The visual type of the marker. Sets the color of the marker to indicate\n       * the state of the thing it represents. Choose from 'important', 'warning',\n       * or 'info', or 'unknown'. Defaults to 'info'.\n       *\n       * @type {String}\n       */\n      type: {\n        type: String,\n        reflectToAttribute: true,\n        value: 'info',\n        observer: '_updateMarkerIcon'\n      },\n\n      /**\n       * Shows a small notification badge on the icon that indicates there is\n       * some relevant updated information about the marker.\n       *\n       * @type {Object}\n       */\n      showBadge: {\n        type: Boolean,\n        value: true,\n        observer: '_updateMarkerIcon'\n      }\n    },\n\n    getMarkerIcon() {\n      if (!this.markerIcon) {\n        const options = this._getMarkerIconOptions();\n        this.markerIcon = new PxMap.StaticIcon(options);\n      }\n      return this.markerIcon;\n    },\n\n    _updateMarkerIcon() {\n      if (!this.markerIcon) return;\n\n      const options = this._getMarkerIconOptions();\n      this.markerIcon = new PxMap.StaticIcon(options);\n\n      this.shouldUpdateInst();\n    },\n\n    _getMarkerIconOptions() {\n      return {\n        type: this.type || '',\n        badge: this.showBadge || false\n      };\n    }\n  };\n  /* Bind StaticMarker behavior */\n  namespace.StaticMarker = [\n    namespace.Marker,\n    StaticMarkerImpl\n  ];\n\n})()\n"]}