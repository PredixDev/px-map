/*
 * Copyright (c) 2014 GE Global Research. All rights reserved.
 *
 * The copyright to the computer software herein is the property of
 * GE Global Research. The software may be used and/or copied only
 * with the written permission of GE Global Research or in accordance
 * with the terms and conditions stipulated in the agreement/contract
 * under which the software has been supplied.
 */

//
// Sass for the for the px-map component
//
// @author
//

// Settings
@import "px-colors-design/_settings.colors.scss";

// Tools
// ...

// Generic
@import "px-normalize-design/_generic.normalize.scss";
@import "px-box-sizing-design/_generic.box-sizing.scss";
@import "px-helpers-design/_generic.helpers.scss";

// Base
@import "px-typography-design/_base.typography.scss";
@import "px-flexbox-design/_base.flexbox.scss";
@import "px-viewport-design/_base.viewport.scss";

// Meta
@import "px-meta-buttons-design/_meta.buttons.scss";

// Objects
// ...

// Component

/*
 * Style variables shared across sub-components
 */
:host {
  --px-map-marker-group-unknown-color: var(--px-map-static-icon-unknown-color, $dv-light-gray);
  --px-map-marker-group-info-color: var(--px-map-static-icon-info-color, $primary-blue);
  --px-map-marker-group-warning-color: var(--px-map-static-icon-warning-color, $alert-orange);
  --px-map-marker-group-important-color: var(--px-map-static-icon-important-color, $alert-red);

  --px-map-marker-group-cluster-path-size: 10px;
  --px-map-marker-group-cluster-border-size: 5px;
  --px-map-marker-group-cluster-font-size: 15px;

  --px-map-marker-group-cluster-polygon-stroke-color: $dv-light-blue;
  --px-map-marker-group-cluster-polygon-fill-color: $dv-basic-blue;
}

/*
 * Override Leaflet's styles
 */
.leaflet-container {
  font-family: $predix-font-family;
  font-size: $inuit-base-font-size;
  line-height: $inuit-base-line-height;
}

/*******************************************************************************
 * ICONS (Attached to markers)
 ******************************************************************************/

// MAP ICON: BASE
@import "_map-icon.scss";

// MAP ICON: STATIC
@import "_map-icon-static.scss";

// MAP ICON: CLUSTER
.map-icon-cluster {
  @extend %map-icon !optional;
  display: block;
  position: absolute;
}

.map-icon-cluster__container {
  border-radius: 100%;
  background: var(--px-map-marker-group-cluster-background, white);
  display: block;
  position: relative;
}
.map-icon-cluster__svg {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 100%;
  border-style: solid;
  border-width: var(--px-map-marker-group-cluster-border-size, 0);
  border-color: var(--px-map-marker-group-cluster-border-color, rgba(0,0,0,0.3));
}
.map-icon-cluster__body {
  display: flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;

  color: var(--px-map-marker-group-cluster-font-color, inherit);
  font-size: var(--px-map-marker-group-cluster-font-size, inherit);
  font-weight: var(--px-map-marker-group-cluster-font-weight, inherit);
  line-height: var(--px-map-marker-group-cluster-line-height, inherit);
}

/*******************************************************************************
 * POPUPS
 ******************************************************************************/

// MAP POPUP: BASE
@import "_map-popup.scss";

// MAP POPUP: INFO
.map-popup-info {
  @extend %map-popup;

  .map-box-info {
    margin: $inuit-base-spacing-unit;
  }
}

// MAP POPUP: DATA
.map-popup-data {
  @extend %map-popup;

  .map-popup-data .map-box-data {
    margin: $inuit-base-spacing-unit;
  }
}

/*******************************************************************************
 * CONTROLS
 ******************************************************************************/

// MAP CONTROL: BASE

// Generic styles for a round button
%map-control-button {
  background-color: var(--px-map-control-button-background, $white);
  color: var(--px-map-control-button-text-color, $primary-blue);
  border-style: solid;
  border-width: var(--pax-map-control-button-border-width, 3px);
  border-color: var(--pax-map-control-button-border-color, rgba(0,0,0,.3));

  border-radius: 15%;
  line-height: calculateRem(36px);
  font-size: calculateRem(20px);
  font-weight: 400;

  margin-bottom: $inuit-base-spacing-unit--tiny;

  &:hover {
    background-color: var(--px-map-control-button-background, $gray3);
  }
}

// Extends generic button to be round
%map-control-button--round {
  width: calculateRem(40px);
  height: calculateRem(40px);
  position: relative;
  border-radius: 100%;
}

// MAP CONTROL: ZOOM

.leaflet-bar.leaflet-control.leaflet-control-zoom {
  border: none;
  border-radius: 0;
  box-shadow: none;
}
.leaflet-bar.leaflet-control.leaflet-control-zoom {
  a.leaflet-control-zoom-in,
  a.leaflet-control-zoom-out {
    @extend %map-control-button;
    @extend %map-control-button--round;
    position: relative;
    border-radius: 100%;
  }
  a.leaflet-control-zoom-in i,
  a.leaflet-control-zoom-out i {
    position: relative;
    left: -0.03rem;
  }
}

// MAP CONTROL: SCALE

// Set background and border style
.leaflet-control-scale-line {
  background: none;
  font-size: $inuit-base-font-size;
  border-width: 1px;
  border-color: $black;

  &:not(:first-child) {
    border-top: 1px solid $black;
    border-bottom: none;
    margin-top: -1px;
  }

  &:not(:first-child):not(:last-child) {
    border-bottom: 1px solid $black;
  }
}

// Set the styles for the `reverse` modifier (for dark backgrounds)
.leaflet-control-scale.leaflet-control-scale--reverse {
  background-color: rgba($black, 0.4);
  padding: 3px;
}
.leaflet-control-scale--reverse .leaflet-control-scale-line {
  color: white;
  border-color: $white;

  &:not(:first-child) {
    border-top-color: $white;
  }

  &:not(:first-child):not(:last-child) {
    border-bottom-color: $white;
  }
}

// Set margins to be the same as other elements
.leaflet-left .leaflet-control-scale {
  margin-left: 10px;
}
.leaflet-bottom .leaflet-control-scale {
  margin-bottom: 10px;
}

// MAP CONTROL: INFO

.map-info-control {
  background-color: white;
  max-width: 250px;
}
.map-info-control .map-box-info {
  margin: $inuit-base-spacing-unit;
}
.map-info-control .map-data-box {
  border: 1px solid $gray4;
}

/*******************************************************************************
 * GENERIC BOXES
 *
 * A `box` is a collection of information that can be placed into multiple
 * containers, like a `popup` or a `control`.
 ******************************************************************************/

 /* GENERIC: Info box generic styles, can be placed in multiple containers */

// Style for the title, which is a text tag
.leaflet-popup-content {
  .map-box-info__title {
    font-weight: 600;
    margin: 0 0 $inuit-base-spacing-unit--tiny;
  }
  // Style for the description, which is a text tag
  .map-box-info__description {
    margin: 0;
  }
  // Style for the optional image, which is set to the left of the content
  .map-box-info__image {
    display: block;
    float: left;
    max-width: 75px;
    margin-right: $inuit-base-spacing-unit--small;
    img {
      max-width: 100%;
      height: auto;
    }
  }
  // We need the content container to be a block with overflow hidden to
  // inset the picture to the left without text wrapping.
  .map-box-info__content {
    display: block;
    overflow: hidden;
  }
}

/* GENERIC: Data box generic styles, can be placed in multiple containers */

.leaflet-popup-content {
  .map-data-box__header {
    padding: calculateRem(10px);
  }
  .map-data-box__header__text {
    text-transform: uppercase;
    font-size: calculateRem(12px);
    line-height: calculateRem(14px);
    margin: 0;
  }
  .map-data-box__table {
    display: flex;
    flex-wrap: wrap;
  }
  .map-data-box__table__cell {
    flex-grow: 1;
    overflow: hidden;
    width: 50%;

    border-top: 1px solid $gray4;
    &:nth-child(2n) { border-left: 1px solid $gray4; }

    padding: calculateRem(10px);
    text-transform: uppercase;
    font-size: calculateRem(12px);
    line-height: calculateRem(14px);
    p { margin: 0; }
  }
}

/*******************************************************************************
 * MARKER CLUSTER
 *
 * Styles the underlying pieces of marer-group's marker clusters that are not
 * styled through configuration in the component.
 ******************************************************************************/

// Handles animation of the clusters and spider legs
.leaflet-cluster-anim .leaflet-marker-icon, .leaflet-cluster-anim .leaflet-marker-shadow {
  transition: transform 0.3s ease-out, opacity 0.3s ease-in;
}
.leaflet-cluster-spider-leg {
  /* stroke-dashoffset (duration and function) should match with leaflet-marker-icon transform in order to track it exactly */
  transition: stroke-dashoffset 0.3s ease-out, stroke-opacity 0.3s ease-in;
}


// Trumps
@import "inuit-clearfix/_trumps.clearfix.scss";
@import "px-spacing-responsive-design/_trumps.spacing-responsive.scss";
@import "px-widths-responsive-design/_trumps.widths-responsive.scss";
